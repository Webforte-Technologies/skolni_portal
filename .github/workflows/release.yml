name: Release Management

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/**'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $VERSION"

      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          if git describe --tags --abbrev=0 >/dev/null 2>&1; then
            LAST_TAG=$(git describe --tags --abbrev=0)
            CHANGELOG=$(git log --pretty=format:"- %s (%an)" $LAST_TAG..HEAD --no-merges)
          else
            CHANGELOG=$(git log --pretty=format:"- %s (%an)" --no-merges)
          fi
          
          # Filter out automated commits
          CHANGELOG=$(echo "$CHANGELOG" | grep -v "chore\|ci\|docs" | head -50)
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            ## 🚀 Release v${{ steps.get_version.outputs.version }}
            
            ### 📋 Changes in this release:
            ${{ steps.changelog.outputs.changelog }}
            
            ### 🔧 Technical Details:
            - **Branch**: ${{ github.ref_name }}
            - **Commit**: ${{ github.sha }}
            - **Build**: ${{ github.run_number }}
            
            ### 📦 Deployment:
            Download the deployment package from the [CI/CD workflow artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}).
            
            ### 🧪 Testing:
            All automated tests have passed successfully.
            
            ---
            *This release was automatically generated by GitHub Actions.*
          draft: false
          prerelease: false

      - name: Notify release creation
        run: |
          echo "🎉 Release v${{ steps.get_version.outputs.version }} created successfully!"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/v${{ steps.get_version.outputs.version }}"
          echo "📝 Changelog entries: $(echo "${{ steps.changelog.outputs.changelog }}" | wc -l)"
